{"version":3,"sources":["App.js","index.js"],"names":["App","useState","allQuotes","setAllQuotes","text","author","quote","setQuote","hideLoader","toggleHideLoader","useEffect","a","fetch","res","json","data","console","log","message","className","id","length","onClick","newQuote","Math","floor","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAkDeA,MAhDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEaF,mBAAS,CACjCG,KAAM,wBACNC,OAAQ,YAJG,mBAENC,EAFM,KAECC,EAFD,OAM0BN,oBAAS,GANnC,mBAMNO,EANM,KAMMC,EANN,KA4Bb,OApBAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,4DACqB,8BADrB,SAGGF,GAAiB,GAHpB,SAIqBG,MAHA,+BADrB,cAISC,EAJT,gBAKsBA,EAAIC,OAL1B,OAKSC,EALT,OAMGZ,EAAaY,GACbN,GAAiB,GAPpB,kDASGO,QAAQC,IAAI,KAAIC,SATnB,yDAAD,KAYC,IAOIV,EACL,sBAAKW,UAAU,kBAAf,UACE,qBACEA,UAAU,aACVC,GAAE,UAAKd,EAAMF,KAAKiB,OAAS,GAAK,aAAe,MAFjD,SAIGf,EAAMF,OAET,qBAAKe,UAAU,eAAf,SACGb,EAAMD,OAASC,EAAMD,OAAS,YAEjC,qBAAKc,UAAU,SAAf,SACE,wBAAQG,QAjBM,WAClB,IAAMC,EAAWrB,EAAUsB,KAAKC,MAAMD,KAAKE,SAAWxB,EAAUmB,SAChEd,EAASgB,IAeL,4BAIJ,qBAAKJ,UAAU,YCzCnBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0198e615.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [allQuotes, setAllQuotes] = useState([]);\n  const [quote, setQuote] = useState({\n    text: \"React quote generator\",\n    author: \"Auguest\",\n  });\n  const [hideLoader, toggleHideLoader] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const quoteApiUrl = \"https://type.fit/api/quotes\";\n      try {\n        toggleHideLoader(false);\n        const res = await fetch(quoteApiUrl);\n        const data = await res.json();\n        setAllQuotes(data);\n        toggleHideLoader(true);\n      } catch (err) {\n        console.log(err.message);\n      }\n    })();\n  }, []);\n\n  const getNewQuote = () => {\n    const newQuote = allQuotes[Math.floor(Math.random() * allQuotes.length)];\n    setQuote(newQuote);\n  };\n\n  return hideLoader ? (\n    <div className=\"quote-container\">\n      <div\n        className=\"quote-text\"\n        id={`${quote.text.length > 50 ? \"long-quote\" : null}`}\n      >\n        {quote.text}\n      </div>\n      <div className=\"quote-author\">\n        {quote.author ? quote.author : \"Unknown\"}\n      </div>\n      <div className=\"button\">\n        <button onClick={getNewQuote}>New Quote</button>\n      </div>\n    </div>\n  ) : (\n    <div className=\"loader\"></div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}